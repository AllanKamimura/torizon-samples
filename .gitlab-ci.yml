# This file calls one sub-pipeline for each sample
# Each sample has one .gitlab-ci.yml on its own sub-directory
#   those samples are included from here
# Shared scripts are in .gitlab-ci-scripts.yml and included in each sample

variables:
  # On local runner setup over VPN, fetch may fail with many jobs in parallel
  # see https://docs.gitlab.com/ee/ci/runners/configure_runners.html#job-stages-attempts
  GET_SOURCES_ATTEMPTS: 5

default:
  # retry failed jobs, since Docker is not very stable when running many jobs in parallel
  retry: 2

# Only run branch pipelines
include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

stages:
  # Trigger samples child pipelines
  - build
  # Final job, always run even if no child pipelines run
  - end

#### Dockerfile-base samples ####

adc-jobs:
  stage: build
  trigger:
    include: adc/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - adc/*

dbus-tools-jobs:
  stage: build
  trigger:
    include: dbus/tools/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - dbus/tools/*

dbus-python-jobs:
  stage: build
  trigger:
    include: dbus/python/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - dbus/python/*

gpio-bash-jobs:
  stage: build
  trigger:
    include: gpio/bash/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - gpio/bash/*

gpio-c-jobs:
  stage: build
  trigger:
    include: gpio/c/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - gpio/c/*

dlr-gstreamer-jobs:
  stage: build
  trigger:
    include: dlr-gstreamer/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - dlr-gstreamer/*

uart-gps-python-jobs:
  stage: build
  trigger:
    include: gps/python/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - gps/python/*

collectd-jobs:
  stage: build
  trigger:
    include: grafana/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - grafana/*

gstreamer-simple-pipeline-jobs:
  stage: build
  trigger:
    include: gstreamer/bash/simple-pipeline/.gitlab-ci.yml
  rules:
    - changes:
      - gstreamer/bash/simple-pipeline/*

nodejs-jobs:
  stage: build
  trigger:
    include: nodejs/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - nodejs/*
      - nodejs/**/*

opencl-jobs:
  stage: build
  trigger:
    include: opencl/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - opencl/*

opencv-jobs:
  stage: build
  trigger:
    include: opencv/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - opencv/*

pwm-jobs:
  stage: build
  trigger:
    include: pwm/.gitlab-ci.yml
  rules:
    - changes:
      - pwm/*

qt5-python-qml-jobs:
  stage: build
  trigger:
    include: python-qml/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - python-qml/*

uart-sht31-flask-app-jobs:
  stage: build
  trigger:
    include: sht31/flaskapp/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - sht31/flaskapp/*

uart-sht31-influxdb-jobs:
  stage: build
  trigger:
    include: sht31/sht31-influxdb/.gitlab-ci.yml
  rules:
    - changes:
      - sht31/sht31-influxdb/*

uart-sht31-kiosk-jobs:
  stage: build
  trigger:
    include: sht31/kiosk/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - sht31/kiosk/*

tflite-basic-jobs:
  stage: build
  trigger:
    include: tflite/tflite-basic/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - tflite/tflite-basic/*

tflite-rtsp-jobs:
  stage: build
  trigger:
    include: tflite/tflite-rtsp/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - tflite/tflite-rtsp/*
      - tflite/tflite-rtsp/**/*

weather-jobs:
  stage: build
  trigger:
    include: weather/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - weather/*

#### Docker Compose only samples ####

crank-jobs:
  stage: build
  trigger:
    include: crank/.gitlab-ci.yml
    strategy: depend
  rules:
    - changes:
      - crank/*

# Run this job even if no other job is added to the pipeline
# It prevents commits without a job
final-job:
  stage: end
  script:
    - echo "All jobs were run"
