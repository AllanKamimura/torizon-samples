variables:
  DOCKERFILE_FOLDER: "gpio/c/"

# Stages
stages:
  - lint
  - repository tagging
  - build
  - build-multiarch

# Scripts
include:
  - /.gitlab-ci-scripts.yml

# Jobs

dockerfile-lint-gpio-c:
  extends: .dockerfile-lint
  stage: lint

tag-gpio-c:
  extends: .tag
  before_script:
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  stage: repository tagging
  variables:
    SAMPLE_NAME: gpio-c

docker-build-gpio-c:
  extends: .docker-build
  before_script:
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    BASE_NAME: debian
    IMAGE_NAME: arm32v7-sample-gpio-c
    IMAGE_ARCH: linux/arm/v7
    IMAGE_TAG: ${DEBIAN_RELEASE_NUMBER}-${DEBIAN_RELEASE}
    CROSS_TC_IMAGE_ARCH: armhf
    GCC_PREFIX: arm-linux-gnueabihf
  stage: build

docker-build-gpio-c-arm64v8:
  extends: .docker-build
  before_script:
    - export MAJOR="${DEBIAN_MAJOR}"
    - export MINOR="${DEBIAN_MINOR}"
    - export PATCH="${DEBIAN_PATCH}"
  variables:
    BASE_NAME: debian
    IMAGE_NAME: arm64v8-sample-gpio-c
    IMAGE_ARCH: linux/arm64/v8
    IMAGE_TAG: ${DEBIAN_RELEASE_NUMBER}-${DEBIAN_RELEASE}
    CROSS_TC_IMAGE_ARCH: arm64
    GCC_PREFIX: aarch64-linux-gnu
  stage: build

docker-build-gpio-c-multiarch:
  extends: .docker-build-multiarch
  variables:
    IMAGE_NAME: sample-gpio-c
    IMAGE_NAME_32: arm32v7-sample-gpio-c
    IMAGE_NAME_64: arm64v8-sample-gpio-c
  stage: build-multiarch
