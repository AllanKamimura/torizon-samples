version: "2.4"
services:
  influxdb:
    container_name: influxdb
    networks:
      - backend
    volumes:
      - "influxdb:/var/lib/influxdb"
    image: influxdb:1.7.10

  sht31-influxdb:
    build:
      context: sht31-influxdb
    tty: true
    container_name: sht31-influxdb
    devices:
      - "/dev/apalis-i2c1"
      - "/dev/tty2"
    depends_on:
      - influxdb
    networks:
      - backend
    command:
      [
        "wait-for-it",
        "influxdb:8086",
        "-t",
        "60",
        "--",
        "python3",
        "/usr/bin/sht31-influxdb.py",
        "/dev/apalis-i2c1",
        "/dev/tty2",
      ]

  flaskapp:
    build:
      context: flaskapp
    tty: true
    container_name: flaskapp
    depends_on:
      - influxdb
      - sht31-influxdb
    networks:
      - backend
      - frontend
    ports:
      - 5000:5000
    working_dir: /flaskapp
    command:
      [
        "wait-for-it",
        "influxdb:8086",
        "-t",
        "60",
        "--",
        "python3",
        "flaskapp.py",
      ]

  weston:
    environment:
      - ACCEPT_FSL_EULA=1
    container_name: weston
    image: torizon/weston:2
    # For Apalis iMX8 use this image
    # image: torizon/weston-vivante:2
    # Required to get udev events from host udevd via netlink
    network_mode: host
    volumes:
      - type: bind
        source: /tmp
        target: /tmp
      - type: bind
        source: /dev
        target: /dev
      - type: bind
        source: /run/udev
        target: /run/udev
    cap_add:
      - CAP_SYS_TTY_CONFIG
    # Add device access rights through cgroup...
    device_cgroup_rules:
      # ... for tty0
      - "c 4:0 rmw"
      # ... for tty7
      - "c 4:7 rmw"
      # ... for /dev/input devices
      - "c 13:* rmw"
      - "c 199:* rmw"
      # ... for /dev/dri devices
      - "c 226:* rmw"
    command: --developer weston-launch --tty=/dev/tty7 --user=torizon
    healthcheck:
        test: ["CMD", "test", "-S", "/tmp/.X11-unix/X0"]
        interval: 5s
        timeout: 4s
        retries: 6
        start_period: 10s

  kiosk:
    build:
      context: kiosk
    container_name: kiosk
    entrypoint: []
    command:
      [
        "wait-for-it",
        "flaskapp:5000",
        "-t",
        "60",
        "--",
        "/usr/bin/start-browser",
        "--window-mode",
        "http://flaskapp:5000",
      ]
    networks:
      - frontend
    volumes:
      - type: bind
        source: /tmp
        target: /tmp
      - type: bind
        source: /var/run/dbus
        target: /var/run/dbus
      - type: bind
        source: /dev/dri
        target: /dev/dri
    security_opt:
      - seccomp:unconfined      
    depends_on:
      weston:
        condition: service_healthy
      influxdb:
        condition: service_started
      sht31-influxdb:
        condition: service_started
      flaskapp:
        condition: service_started
    shm_size: "256mb"
    device_cgroup_rules:
      # ... for /dev/dri devices
      - "c 226:* rmw"

networks:
  backend:
    internal: true
  frontend:
    internal: false

volumes:
  influxdb:
